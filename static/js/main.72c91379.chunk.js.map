{"version":3,"sources":["api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable.tsx/PeopleTable.tsx","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","React","memo","person","href","slug","className","cn","sex","name","born","died","motherName","fatherName","PeopleTable","people","map","Loader","App","useState","setPeople","isLoading","setIsLoading","isLoadError","setIsLoadError","useEffect","catch","finally","role","length","createRoot","document","getElementById","render"],"mappings":"2PASO,SAASA,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,2BCNYQ,EAA8BC,IAAMC,MAC/C,YAAiB,IAAdC,EAAa,EAAbA,OACD,OACE,qBAAI,UAAQ,SAAZ,UACE,6BACE,mBACEC,KAAI,mBAAcD,EAAOE,MACzBC,UAAWC,IACT,OACA,CAAE,kBAAkC,MAAfJ,EAAOK,MAJhC,SAOGL,EAAOM,SAIZ,6BAAKN,EAAOK,MACZ,6BAAKL,EAAOO,OACZ,6BAAKP,EAAOQ,OAEXR,EAAOS,WAEJ,6BAAKT,EAAOS,aAGZ,mCAGHT,EAAOU,WAEJ,6BAAKV,EAAOU,aAGZ,qCAIT,ICrCUC,EAA+Bb,IAAMC,MAChD,YAAiB,IAAda,EAAa,EAAbA,OACD,OACE,wBACE,UAAQ,cACRT,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGS,EAAOC,KAAI,SAAAb,GAAM,OAChB,cAACH,EAAD,CAEEG,OAAQA,GADHA,EAAOE,KAFE,QASzB,IClCUY,G,MAAS,kBACpB,qBAAKX,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCMTY,EAAM,WACjB,MAA4BC,mBAAmB,IAA/C,mBAAOJ,EAAP,KAAeK,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KASA,OAPAC,qBAAU,WACRlC,IACGK,KAAKwB,GACLM,OAAM,kBAAMF,GAAe,EAArB,IACNG,SAAQ,kBAAML,GAAa,EAAnB,GACZ,GAAE,IAGD,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRhB,UAAU,iCACVsB,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKtB,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,cAAcF,KAAK,KAAhC,kBAIA,mBACEE,UAAU,0CACVF,KAAK,WAFP,2BAUN,sBAAME,UAAU,UAAhB,SACE,sBAAKA,UAAU,YAAf,UAEE,oBAAIA,UAAU,QAAd,yBAGA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGe,EACC,cAAC,EAAD,IAEA,cAACP,EAAD,CAAaC,OAAQA,IAGtBQ,GACC,mBAAG,UAAQ,qBAAqBjB,UAAU,kBAA1C,mCAKAS,EAAOc,QACP,mBAAG,UAAQ,qBAAqBvB,UAAU,kBAA1C,SACE,mBAAG,UAAQ,kBAAX,6DAWjB,ECrEDwB,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.72c91379.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = React.memo(\n  ({ person }) => {\n    return (\n      <tr data-cy=\"person\">\n        <td>\n          <a\n            href={`#/people/${person.slug}`}\n            className={cn(\n              'todo',\n              { 'has-text-danger': person.sex === 'f' },\n            )}\n          >\n            {person.name}\n          </a>\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n\n        {person.motherName\n          ? (\n            <td>{person.motherName}</td>\n          )\n          : (\n            <td>-</td>\n          )}\n\n        {person.fatherName\n          ? (\n            <td>{person.fatherName}</td>\n          )\n          : (\n            <td>-</td>\n          )}\n      </tr>\n    );\n  },\n);\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(\n  ({ people }) => {\n    return (\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => (\n            <PersonLink\n              key={person.slug}\n              person={person}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport { getPeople } from './api';\nimport { PeopleTable } from './components/PeopleTable.tsx/PeopleTable';\nimport { Loader } from './components/Loader';\nimport { Person } from './types';\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadError, setIsLoadError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsLoadError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <a className=\"navbar-item\" href=\"#/\">\n              Home\n            </a>\n\n            <a\n              className=\"navbar-item has-background-grey-lighter\"\n              href=\"#/people\"\n            >\n              People\n            </a>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          {/* <h1 className=\"title\">Home Page</h1> */}\n          <h1 className=\"title\">People Page</h1>\n          {/* <h1 className=\"title\">Page not found</h1> */}\n\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <PeopleTable people={people} />\n              )}\n\n              {isLoadError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!people.length && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}