{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","api.ts","components/TableRow/TableRow.tsx","components/PeopleTable.tsx/PeopleTable.tsx","components/Loader/Loader.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["Navbar","React","memo","className","role","to","isActive","cn","App","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","TableRow","person","href","slug","sex","name","born","died","motherName","fatherName","PeopleTable","people","map","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadError","setIsLoadError","useEffect","catch","finally","length","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.30b7eb21.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = React.memo(\n  () => {\n    return (\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => cn(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => cn(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n    );\n  },\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const TableRow: React.FC<Props> = React.memo(\n  ({ person }) => {\n    return (\n      <tr data-cy=\"person\">\n        <td>\n          <a\n            href={`#/people/${person.slug}`}\n            className={cn('todo', {\n              'has-text-danger': person.sex === 'f',\n            })}\n          >\n            {person.name}\n          </a>\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n\n        {person.motherName\n          ? (\n            <td>{person.motherName}</td>\n          )\n          : (\n            <td>-</td>\n          )}\n\n        {person.fatherName\n          ? (\n            <td>{person.fatherName}</td>\n          )\n          : (\n            <td>-</td>\n          )}\n      </tr>\n    );\n  },\n);\n","import React from 'react';\nimport { Person } from '../../types';\nimport { TableRow } from '../TableRow/TableRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(\n  ({ people }) => {\n    return (\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => (\n            <TableRow\n              key={person.slug}\n              person={person}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable.tsx/PeopleTable';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadError, setIsLoadError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsLoadError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <PeopleTable people={people} />\n          )}\n\n          {isLoadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = React.memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = React.memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n          </Route>\n\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}